{{>partial_header}}
using System;
using System.Text;
using RestSharp;


namespace {{packageName}}.Client
{
    /// <summary>
    /// API Exception
    /// </summary>
    {{>visibility}} class ApiException : Exception
    {
        /// <summary>
        /// Gets or sets the error code (HTTP status code)
        /// </summary>
        /// <value>The error code (HTTP status code).</value>
        public int ErrorCode { get; set; }

        /// <summary>
        /// Gets or sets the request
        /// </summary>
        /// <value>The http request that generated the error.</value>
        public IRestRequest Request { get; set; }

        /// <summary>
        /// Gets or sets the request
        /// </summary>
        /// <value>The http response containing the generated error.</value>
        public IRestResponse Response { get; set; }

        /// <summary>
        /// Initializes a new instance of the <see cref="ApiException"/> class.
        /// </summary>
        public ApiException() {}

        /// <summary>
        /// Initializes a new instance of the <see cref="ApiException"/> class.
        /// </summary>
        /// <param name="errorCode">HTTP status code.</param>
        /// <param name="message">Error message.</param>
        public ApiException(int errorCode, string message) : base(message)
        {
            this.ErrorCode = errorCode;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="ApiException"/> class.
        /// </summary>
        /// <param name="errorCode">HTTP status code.</param>
        /// <param name="request">HTTP request.</param>
        /// <param name="reponse">HTTP response.</param>
        public ApiException(int errorCode, string message, IRestRequest request, IRestResponse response) : base(message)
        {
            this.ErrorCode = errorCode;
            this.Request = request;
            this.Response = response;
        }

        /// <summary>
        /// Produces a concise exception description.
        /// </summary>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.AppendLine(base.ToString());
            sb.AppendLine("If you believe this message has been generated in error, use the ToStringDebug() method to generate a more detailed exception report");
            return sb.ToString();
        }

        /// <summary>
        /// Produces a detailed exception report for debugging purposes.
        /// </summary>
        public string ToStringDebug()
        {
            StringBuilder sb = new StringBuilder();
            sb.AppendLine(base.ToString());
            sb.AppendLine("\n====Library====");
            sb.AppendLine(Configuration.ToDebugReport());
            if (Request != null)
            {
                sb.AppendLine("\n====Request====");
                sb.AppendLine("Timeout: " + Request.Timeout + "ms");
                sb.AppendLine("Method: " + Request.Method);
                sb.AppendLine("URI: " + Request.Resource);
                sb.AppendLine("Parameters: ");
                if (Request.Parameters != null)
                {
                    foreach (Parameter parameter in Request.Parameters)
                    {
                        if (parameter != null)
                            sb.AppendFormat("* Type: {0}, Name: {1}, Value: {2}\n", parameter.Type, parameter.Name, parameter.Value);
                    }
                }
            }

            if (Response != null)
            {
                sb.AppendLine("\n====Response====");
                sb.AppendLine("Status: " + Response.StatusCode + " " + Response.StatusDescription);
                if (Response.ResponseUri != null)
                    sb.AppendFormat("URI: {0}://{1}:{2}{3}\n", Response.ResponseUri.Scheme, Response.ResponseUri.Host, Response.ResponseUri.Port, Response.ResponseUri.AbsolutePath);
                sb.AppendLine("Headers: ");
                if (Response.Headers != null)
                {
                    foreach (Parameter header in Response.Headers)
                    {
                        if (header != null)
                            sb.AppendFormat("* Name: {0}, Value: {1}\n", header.Name, header.Value);
                    }
                }
                sb.AppendLine("Content Type: " + Response.ContentType);
                sb.AppendLine("Content: " + Response.Content);
            }
            return sb.ToString();
        }
    }
}
